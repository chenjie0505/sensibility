#!/usr/bin/env python3
# -*- coding: UTF-8 -*-

# Copyright 2017 Eddie Antonio Santos <easantos@ualberta.ca>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
Takes filehashes on stdin and process them.

Usage:
    parse-and-insert-all < file-hashes
"""

import logging
from sensibility.util import filehashes
from sensibility.language import language
from sensibility.miner.corpus import Corpus


corpus = Corpus()


def parse_and_insert(filehash: str) -> None:
    source = corpus[filehash]

    # NOTE: check_syntax() accepts more inputs than tokenize().
    if language.check_syntax(source):
        raise SyntaxError(filehash)
    # Word count may raise an exception.
    counts = language.word_count(source)
    corpus.insert_source_summary(filehash, counts)


if __name__ == '__main__':
    for filehash in filehashes():
        try:
            parse_and_insert(filehash)
        except:
            corpus.insert_failure(filehash)
            logging.exception('Failed parsing %s', filehash)
