#!/usr/bin/env python3
# -*- coding: UTF-8 -*-

# Copyright 2017 Eddie Antonio Santos <easantos@ualberta.ca>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
Finds minified JavaScript files and marks them as failures (such that they are
no longer eligible sources).
"""

import fnmatch
import logging
import sqlite3

from sensibility.language import language
from sensibility.miner.corpus import Corpus
from sensibility.evaluation.cluster import SummaryWithHash, find_break_point
from sensibility.miner.connection import get_sqlite3_path


logging.basicConfig(level=logging.DEBUG)

# This only makes sense for JavaScript (I think).
language.set_language('JavaScript')
# Load the JavaScript corpus.
corpus = Corpus()

# Get a list of all parsed source files.
logging.debug('Retrieving source summaries')
files = list(SummaryWithHash(filehash, summary)
             for filehash, summary in corpus.source_summaries
             if summary.n_tokens > 0)
break_point = find_break_point(files)

# Corrected the comparison from `<`, but the corpus was processed before the
# fix.
reason = f"minified:>={break_point:.1f}"
for source in files:
    if source.ratio < break_point:
        continue
    corpus.insert_failure(source.filehash, reason=reason)


logging.debug('Marking files that match glob `*[.-]min.js`')
conn = sqlite3.connect(get_sqlite3_path())
reason = f"minified:.min.js"
query =  r'''
    SELECT hash FROM repository_source
     WHERE lower(path) GLOB '*[.-]min.js'
'''

for filehash, in conn.execute(query):
    corpus.insert_failure(filehash, reason=reason, ignore=True)
