#!/usr/bin/env python3
# -*- coding: UTF-8 -*-

# Copyright 2017 Eddie Antonio Santos <easantos@ualberta.ca>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


"""
Returns a summary of the number of source lines of code in the program.
Like a smart wc(1)!

Usage:
    summarize <python-filename >summary
"""

import sys

import sensibility.language.python
from sensibility.token_utils import Lexeme


# TODO: handle this before tokens make it to this script?
def is_physical_token(token: Lexeme) -> bool:
    FAKE_TOKENS = {
        'ENDMARKER', 'ENCODING', 'COMMENT', 'NL'
    }
    return token.name not in FAKE_TOKENS


if __name__ == '__main__':
    language = sensibility.language.python.Python()
    # TODO: should read file in bytes!
    tokens = [token for token in language.tokenize(sys.stdin.read())
              if is_physical_token(token)]
    n_tokens = len(tokens)

    INTANGIBLE_TOKENS = {'DEDENT', 'NEWLINE'}
    # Special case DEDENT and NEWLINE tokens:
    # They're do not count towards the line count (they are often on empty
    # lines).
    sloc = len(set(lineno for token in tokens
                   for lineno in token.lines
                   if token.name not in INTANGIBLE_TOKENS))
    print(f"{sloc:8d} {n_tokens:8d}")
