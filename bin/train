#!/usr/bin/env python3
# -*- coding: UTF-8 -*-

# Copyright 2017 Eddie Antonio Santos <easantos@ualberta.ca>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import argparse
from pathlib import Path

from sensibility.model.lstm import ModelDescription, layers
from sensibility._paths import EVALUATION_DIR

# TODO: Support multiple models?

# Based on emprical findings: this one gets to min loss pretty quickly,
# and is usable.
HIDDEN_LAYERS = (300, 300)
# Based on White et al. 2015
CONTEXT_LENGTH = 20
# This is arbitrary, but it should be fairly small.
BATCH_SIZE = 512

# Default place to dump and load models.
MODEL_DIR = EVALUATION_DIR / 'models'

# Create the argument parser.
# TODO: infer from language.
parser = argparse.ArgumentParser(description='Train from corpus '
                                 'of vectors, with fold assignments')
parser.add_argument('-f', '--fold', type=int, required=True,
                    help='which fold to use')
group = parser.add_mutually_exclusive_group(required=True)
group.add_argument('--backwards', action='store_true')
group.add_argument('--forwards', action='store_false', dest='backwards')
parser.add_argument('--hidden-layers', type=layers, default=HIDDEN_LAYERS,
                    help=f"default: {HIDDEN_LAYERS}")
parser.add_argument('--context-length', type=int, default=CONTEXT_LENGTH,
                    help=f"default: {CONTEXT_LENGTH}")
parser.add_argument('--batch-size', type=int, default=BATCH_SIZE,
                    help=f"default: {BATCH_SIZE}")
parser.add_argument('--base-dir', type=Path, default=MODEL_DIR,
                    help=f"default: {MODEL_DIR}")
parser.add_argument('vectors_path', type=Path, metavar='vectors',
                    help='corpus of vectors, with assigned folds')


if __name__ == '__main__':
    args = parser.parse_args()
    model = ModelDescription(**vars(args))
    model.train()
